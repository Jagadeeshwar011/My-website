{"ast":null,"code":"import{useState,useEffect}from'react';function useTypingEffect(words){let typingSpeed=arguments.length>1&&arguments[1]!==undefined?arguments[1]:110;let deletingSpeed=arguments.length>2&&arguments[2]!==undefined?arguments[2]:60;let delay=arguments.length>3&&arguments[3]!==undefined?arguments[3]:900;const[index,setIndex]=useState(0);const[subIndex,setSubIndex]=useState(0);const[reverse,setReverse]=useState(false);const[text,setText]=useState('');const[blink,setBlink]=useState(true);// Blinking cursor effect\nuseEffect(()=>{const cursorInterval=setInterval(()=>{setBlink(prev=>!prev);},400);return()=>clearInterval(cursorInterval);},[]);// Typing effect\nuseEffect(()=>{if(subIndex===words[index].length+1&&!reverse){setReverse(true);return;}if(subIndex===0&&reverse){setReverse(false);setIndex(prev=>(prev+1)%words.length);return;}const timeout=setTimeout(()=>{setSubIndex(prev=>prev+(reverse?-1:1));},reverse?deletingSpeed:typingSpeed);// Set the current text to display\nsetText(words[index].substring(0,subIndex));return()=>clearTimeout(timeout);},[subIndex,index,reverse,words,typingSpeed,deletingSpeed]);// Delay at the end of typing each word\nuseEffect(()=>{if(!reverse&&text===words[index]){const delayTimeout=setTimeout(()=>{setReverse(true);},delay);return()=>clearTimeout(delayTimeout);}},[text,reverse,index,words,delay]);return{text,blink};}export default useTypingEffect;","map":{"version":3,"names":["useState","useEffect","useTypingEffect","words","typingSpeed","arguments","length","undefined","deletingSpeed","delay","index","setIndex","subIndex","setSubIndex","reverse","setReverse","text","setText","blink","setBlink","cursorInterval","setInterval","prev","clearInterval","timeout","setTimeout","substring","clearTimeout","delayTimeout"],"sources":["C:/Users/jagad/My-website/src/Components/UseTypingEffect.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\nfunction useTypingEffect(words, typingSpeed = 110, deletingSpeed = 60, delay = 900) {\r\n    const [index, setIndex] = useState(0);\r\n    const [subIndex, setSubIndex] = useState(0);\r\n    const [reverse, setReverse] = useState(false);\r\n    const [text, setText] = useState('');\r\n    const [blink, setBlink] = useState(true);\r\n\r\n    // Blinking cursor effect\r\n    useEffect(() => {\r\n        const cursorInterval = setInterval(() => {\r\n            setBlink((prev) => !prev);\r\n        }, 400);\r\n        return () => clearInterval(cursorInterval);\r\n    }, []);\r\n\r\n    // Typing effect\r\n    useEffect(() => {\r\n        if (subIndex === words[index].length + 1 && !reverse) {\r\n            setReverse(true);\r\n            return;\r\n        }\r\n\r\n        if (subIndex === 0 && reverse) {\r\n            setReverse(false);\r\n            setIndex((prev) => (prev + 1) % words.length);\r\n            return;\r\n        }\r\n\r\n        const timeout = setTimeout(() => {\r\n            setSubIndex((prev) => prev + (reverse ? -1 : 1));\r\n        }, reverse ? deletingSpeed : typingSpeed);\r\n\r\n        // Set the current text to display\r\n        setText(words[index].substring(0, subIndex));\r\n\r\n        return () => clearTimeout(timeout);\r\n    }, [subIndex, index, reverse, words, typingSpeed, deletingSpeed]);\r\n\r\n    // Delay at the end of typing each word\r\n    useEffect(() => {\r\n        if (!reverse && text === words[index]) {\r\n            const delayTimeout = setTimeout(() => {\r\n                setReverse(true);\r\n            }, delay);\r\n            return () => clearTimeout(delayTimeout);\r\n        }\r\n    }, [text, reverse, index, words, delay]);\r\n\r\n    return { text, blink };\r\n}\r\n\r\nexport default useTypingEffect;\r\n"],"mappings":"AAAA,OAASA,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAE3C,QAAS,CAAAC,eAAeA,CAACC,KAAK,CAAsD,IAApD,CAAAC,WAAW,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,GAAG,IAAE,CAAAG,aAAa,CAAAH,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,EAAE,IAAE,CAAAI,KAAK,CAAAJ,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,GAAG,CAC9E,KAAM,CAACK,KAAK,CAAEC,QAAQ,CAAC,CAAGX,QAAQ,CAAC,CAAC,CAAC,CACrC,KAAM,CAACY,QAAQ,CAAEC,WAAW,CAAC,CAAGb,QAAQ,CAAC,CAAC,CAAC,CAC3C,KAAM,CAACc,OAAO,CAAEC,UAAU,CAAC,CAAGf,QAAQ,CAAC,KAAK,CAAC,CAC7C,KAAM,CAACgB,IAAI,CAAEC,OAAO,CAAC,CAAGjB,QAAQ,CAAC,EAAE,CAAC,CACpC,KAAM,CAACkB,KAAK,CAAEC,QAAQ,CAAC,CAAGnB,QAAQ,CAAC,IAAI,CAAC,CAExC;AACAC,SAAS,CAAC,IAAM,CACZ,KAAM,CAAAmB,cAAc,CAAGC,WAAW,CAAC,IAAM,CACrCF,QAAQ,CAAEG,IAAI,EAAK,CAACA,IAAI,CAAC,CAC7B,CAAC,CAAE,GAAG,CAAC,CACP,MAAO,IAAMC,aAAa,CAACH,cAAc,CAAC,CAC9C,CAAC,CAAE,EAAE,CAAC,CAEN;AACAnB,SAAS,CAAC,IAAM,CACZ,GAAIW,QAAQ,GAAKT,KAAK,CAACO,KAAK,CAAC,CAACJ,MAAM,CAAG,CAAC,EAAI,CAACQ,OAAO,CAAE,CAClDC,UAAU,CAAC,IAAI,CAAC,CAChB,OACJ,CAEA,GAAIH,QAAQ,GAAK,CAAC,EAAIE,OAAO,CAAE,CAC3BC,UAAU,CAAC,KAAK,CAAC,CACjBJ,QAAQ,CAAEW,IAAI,EAAK,CAACA,IAAI,CAAG,CAAC,EAAInB,KAAK,CAACG,MAAM,CAAC,CAC7C,OACJ,CAEA,KAAM,CAAAkB,OAAO,CAAGC,UAAU,CAAC,IAAM,CAC7BZ,WAAW,CAAES,IAAI,EAAKA,IAAI,EAAIR,OAAO,CAAG,CAAC,CAAC,CAAG,CAAC,CAAC,CAAC,CACpD,CAAC,CAAEA,OAAO,CAAGN,aAAa,CAAGJ,WAAW,CAAC,CAEzC;AACAa,OAAO,CAACd,KAAK,CAACO,KAAK,CAAC,CAACgB,SAAS,CAAC,CAAC,CAAEd,QAAQ,CAAC,CAAC,CAE5C,MAAO,IAAMe,YAAY,CAACH,OAAO,CAAC,CACtC,CAAC,CAAE,CAACZ,QAAQ,CAAEF,KAAK,CAAEI,OAAO,CAAEX,KAAK,CAAEC,WAAW,CAAEI,aAAa,CAAC,CAAC,CAEjE;AACAP,SAAS,CAAC,IAAM,CACZ,GAAI,CAACa,OAAO,EAAIE,IAAI,GAAKb,KAAK,CAACO,KAAK,CAAC,CAAE,CACnC,KAAM,CAAAkB,YAAY,CAAGH,UAAU,CAAC,IAAM,CAClCV,UAAU,CAAC,IAAI,CAAC,CACpB,CAAC,CAAEN,KAAK,CAAC,CACT,MAAO,IAAMkB,YAAY,CAACC,YAAY,CAAC,CAC3C,CACJ,CAAC,CAAE,CAACZ,IAAI,CAAEF,OAAO,CAAEJ,KAAK,CAAEP,KAAK,CAAEM,KAAK,CAAC,CAAC,CAExC,MAAO,CAAEO,IAAI,CAAEE,KAAM,CAAC,CAC1B,CAEA,cAAe,CAAAhB,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}