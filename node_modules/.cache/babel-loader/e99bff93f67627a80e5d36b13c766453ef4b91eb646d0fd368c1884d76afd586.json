{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nfunction useTypingEffect(words, typingSpeed = 110, deletingSpeed = 60, delay = 900) {\n  _s();\n  const [index, setIndex] = useState(0);\n  const [subIndex, setSubIndex] = useState(0);\n  const [reverse, setReverse] = useState(false);\n  const [text, setText] = useState('');\n  const [blink, setBlink] = useState(true);\n\n  // Blinking cursor effect\n  useEffect(() => {\n    const cursorInterval = setInterval(() => {\n      setBlink(prev => !prev);\n    }, 400);\n    return () => clearInterval(cursorInterval);\n  }, []);\n\n  // Typing effect\n  useEffect(() => {\n    if (subIndex === words[index].length + 1 && !reverse) {\n      setReverse(true);\n      return;\n    }\n    if (subIndex === 0 && reverse) {\n      setReverse(false);\n      setIndex(prev => (prev + 1) % words.length);\n      return;\n    }\n    const timeout = setTimeout(() => {\n      setSubIndex(prev => prev + (reverse ? -1 : 1));\n    }, reverse ? deletingSpeed : typingSpeed);\n\n    // Set the current text to display\n    setText(words[index].substring(0, subIndex));\n    return () => clearTimeout(timeout);\n  }, [subIndex, index, reverse, words, typingSpeed, deletingSpeed]);\n\n  // Delay at the end of typing each word\n  useEffect(() => {\n    if (!reverse && text === words[index]) {\n      const delayTimeout = setTimeout(() => {\n        setReverse(true);\n      }, delay);\n      return () => clearTimeout(delayTimeout);\n    }\n  }, [text, reverse, index, words, delay]);\n  return {\n    text,\n    blink\n  };\n}\n_s(useTypingEffect, \"lvAIlPEst7om6WAE/VwrI+k2sbc=\");\nexport default useTypingEffect;","map":{"version":3,"names":["useState","useEffect","useTypingEffect","words","typingSpeed","deletingSpeed","delay","_s","index","setIndex","subIndex","setSubIndex","reverse","setReverse","text","setText","blink","setBlink","cursorInterval","setInterval","prev","clearInterval","length","timeout","setTimeout","substring","clearTimeout","delayTimeout"],"sources":["C:/Users/jagad/My-website/src/Components/UseTypingEffect.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\nfunction useTypingEffect(words, typingSpeed = 110, deletingSpeed = 60, delay = 900) {\r\n    const [index, setIndex] = useState(0);\r\n    const [subIndex, setSubIndex] = useState(0);\r\n    const [reverse, setReverse] = useState(false);\r\n    const [text, setText] = useState('');\r\n    const [blink, setBlink] = useState(true);\r\n\r\n    // Blinking cursor effect\r\n    useEffect(() => {\r\n        const cursorInterval = setInterval(() => {\r\n            setBlink((prev) => !prev);\r\n        }, 400);\r\n        return () => clearInterval(cursorInterval);\r\n    }, []);\r\n\r\n    // Typing effect\r\n    useEffect(() => {\r\n        if (subIndex === words[index].length + 1 && !reverse) {\r\n            setReverse(true);\r\n            return;\r\n        }\r\n\r\n        if (subIndex === 0 && reverse) {\r\n            setReverse(false);\r\n            setIndex((prev) => (prev + 1) % words.length);\r\n            return;\r\n        }\r\n\r\n        const timeout = setTimeout(() => {\r\n            setSubIndex((prev) => prev + (reverse ? -1 : 1));\r\n        }, reverse ? deletingSpeed : typingSpeed);\r\n\r\n        // Set the current text to display\r\n        setText(words[index].substring(0, subIndex));\r\n\r\n        return () => clearTimeout(timeout);\r\n    }, [subIndex, index, reverse, words, typingSpeed, deletingSpeed]);\r\n\r\n    // Delay at the end of typing each word\r\n    useEffect(() => {\r\n        if (!reverse && text === words[index]) {\r\n            const delayTimeout = setTimeout(() => {\r\n                setReverse(true);\r\n            }, delay);\r\n            return () => clearTimeout(delayTimeout);\r\n        }\r\n    }, [text, reverse, index, words, delay]);\r\n\r\n    return { text, blink };\r\n}\r\n\r\nexport default useTypingEffect;\r\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,SAASC,eAAeA,CAACC,KAAK,EAAEC,WAAW,GAAG,GAAG,EAAEC,aAAa,GAAG,EAAE,EAAEC,KAAK,GAAG,GAAG,EAAE;EAAAC,EAAA;EAChF,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;EAC3C,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACc,IAAI,EAAEC,OAAO,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACgB,KAAK,EAAEC,QAAQ,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;;EAExC;EACAC,SAAS,CAAC,MAAM;IACZ,MAAMiB,cAAc,GAAGC,WAAW,CAAC,MAAM;MACrCF,QAAQ,CAAEG,IAAI,IAAK,CAACA,IAAI,CAAC;IAC7B,CAAC,EAAE,GAAG,CAAC;IACP,OAAO,MAAMC,aAAa,CAACH,cAAc,CAAC;EAC9C,CAAC,EAAE,EAAE,CAAC;;EAEN;EACAjB,SAAS,CAAC,MAAM;IACZ,IAAIS,QAAQ,KAAKP,KAAK,CAACK,KAAK,CAAC,CAACc,MAAM,GAAG,CAAC,IAAI,CAACV,OAAO,EAAE;MAClDC,UAAU,CAAC,IAAI,CAAC;MAChB;IACJ;IAEA,IAAIH,QAAQ,KAAK,CAAC,IAAIE,OAAO,EAAE;MAC3BC,UAAU,CAAC,KAAK,CAAC;MACjBJ,QAAQ,CAAEW,IAAI,IAAK,CAACA,IAAI,GAAG,CAAC,IAAIjB,KAAK,CAACmB,MAAM,CAAC;MAC7C;IACJ;IAEA,MAAMC,OAAO,GAAGC,UAAU,CAAC,MAAM;MAC7Bb,WAAW,CAAES,IAAI,IAAKA,IAAI,IAAIR,OAAO,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;IACpD,CAAC,EAAEA,OAAO,GAAGP,aAAa,GAAGD,WAAW,CAAC;;IAEzC;IACAW,OAAO,CAACZ,KAAK,CAACK,KAAK,CAAC,CAACiB,SAAS,CAAC,CAAC,EAAEf,QAAQ,CAAC,CAAC;IAE5C,OAAO,MAAMgB,YAAY,CAACH,OAAO,CAAC;EACtC,CAAC,EAAE,CAACb,QAAQ,EAAEF,KAAK,EAAEI,OAAO,EAAET,KAAK,EAAEC,WAAW,EAAEC,aAAa,CAAC,CAAC;;EAEjE;EACAJ,SAAS,CAAC,MAAM;IACZ,IAAI,CAACW,OAAO,IAAIE,IAAI,KAAKX,KAAK,CAACK,KAAK,CAAC,EAAE;MACnC,MAAMmB,YAAY,GAAGH,UAAU,CAAC,MAAM;QAClCX,UAAU,CAAC,IAAI,CAAC;MACpB,CAAC,EAAEP,KAAK,CAAC;MACT,OAAO,MAAMoB,YAAY,CAACC,YAAY,CAAC;IAC3C;EACJ,CAAC,EAAE,CAACb,IAAI,EAAEF,OAAO,EAAEJ,KAAK,EAAEL,KAAK,EAAEG,KAAK,CAAC,CAAC;EAExC,OAAO;IAAEQ,IAAI;IAAEE;EAAM,CAAC;AAC1B;AAACT,EAAA,CAjDQL,eAAe;AAmDxB,eAAeA,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}